{
    "openapi" : "3.0.2",
    "info": {
        "title": "FieldMe API",
        "version": "1.0"
        
            
    },
    "servers": [
        {
            "url": "https://localhost:3000"
        }
    ],
    "tags": [

        {
            "name": "Comment"
        },
        {
            "name": "Compound"
        },
        {
            "name": "Event"
        },
        {
            "name": "Field"
        },
        {
            "name": "Group"
        },
        {
            "name": "Group Message"
        },
        {
            "name": "Logout"
        },
        {
            "name": "Private Message"
        },
        {
            "name": "Review"
        },
        {
            "name": "Sports"
        },
        {
            "name": "User"
        }

    ],
    "paths": {
        


        "/logout":{
            "post": {
                "tags": ["Logout"],
                "description": "Exit the account",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "OK"
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Unauthorized"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/event":{
            "get":{
                "tags": ["Event"],
                "description": "Get all the Events that are currently active",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "All the events were received",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "array",
                                    "items":{
                                        "properties": {
                                            "id":{
                                                "type": "integer"
                                            },
                                            "sportName":{
                                                "type": "string"
                                            },
                                            "startDate":{
                                                "type":"string"
                                            },
                                            "plannedfinishDate":{
                                                "type":"string"
                                            },
                                            "name":{
                                                "type": "string"
                                            },
                                            "summary":{
                                                "type": "string"
                                            },
                                            "limitParticipants":{
                                                "type": "integer"
                                            },
                                            "location":{
                                                "type": "object",
                                                "example": "Point(lat,long)"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Could't find any events"
                                }
                            }
                        }
                    }
                }
            },
            "post":{
                "tags": ["Event"],
                "description": "Create a new event",
                "parameters": [],
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "type": "object",
                                "properties": {
                                    "sportId":{
                                        "type": "object",
                                        "properties": {
                                            "id":{
                                                "type": "integer"
                                            }
                                        }
                                    },
                                    "compoundId":{
                                        "type": "object",
                                        "properties": {
                                            "id":{
                                                "type": "integer"
                                            }
                                        }
                                    },
                                    "fieldId":{
                                        "type": "object",
                                        "properties": {
                                            "id":{
                                                "type": "integer"
                                            }
                                        }
                                    },
                                    "startDate":{
                                        "type":"object"
                                    },
                                    "plannedfinishDate":{
                                        "type":"object"
                                    },
                                    "name":{
                                        "type": "string"
                                    },
                                    "description":{
                                        "type": "string"
                                    },
                                    "limitParticipants":{
                                        "type": "integer"
                                    },
                                    "creator":{
                                        "type": "object",
                                        "properties": {
                                            "userId":{
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Event created",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Event created with success"
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/event/{eventId}":{
            "put":{
                "tags": ["Event"],
                "parameters": [
                        {
                            "name": "eventId",
                            "in": "path",
                            "required": true,
                            "description": "The id of the event to be cancel",
                            "schema":{
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0
                            }
                        }
                    ],
                "responses":{
                    "204":{
                        "description": "The event was succesfully canceled"
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Event does not exist"
                                }
                            }
                        }
                    }
                }
            },
            "get":{
                "tags": ["Event"],
                "description": "Get description for the specified Event",
                "parameters": [{
                    "name": "eventId",
                    "in": "path",
                    "required": true,
                    "description": "The id of the event to get the description",
                    "schema":{
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Description was received",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "object",
                                    "properties": {
                                        "description":{
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Could't find any description for this event"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{userId}/event":{
            "get":{
                "tags": ["Event"],
                "description": "Get the events were the user will participate",
                "parameters": [
                    {
                    "name": "userId",
                    "in": "path",
                    "required": true,
                    "description": "The id of user",
                    "schema":{
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    }
                }
                ],
                "responses": {
                    "200": {
                        "description": "Events were received",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "array",
                                    "items":{
                                        "properties": {
                                            "id":{
                                                "type": "integer"
                                            },
                                            "sportName":{
                                                "type": "string"
                                            },
                                            "startDate":{
                                                "type":"string"
                                            },
                                            "plannedfinishDate":{
                                                "type":"string"
                                            },
                                            "name":{
                                                "type": "string"
                                            },
                                            "summary":{
                                                "type": "string"
                                            },
                                            "limitParticipants":{
                                                "type": "integer"
                                            },
                                            "location":{
                                                "type": "object",
                                                "example": "Point(lat,long)"
                                            }
                                        }
                                    }                                    
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{userId}/events/{eventId}":{
            "post":{
                "tags": ["Event"],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the user",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    },    
                    {
                            "name": "eventId",
                            "in": "path",
                            "required": true,
                            "description": "The id of the event to participate",
                            "schema":{
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0
                            }
                    }
                ],
                "responses":{
                    "204":{
                        "description": "The participation was accepted"
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Event does not exist"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/compound":{
            "post":{
                "tags":["Compound"],
                "description": "Creates a new compound",
                "parameters": [],
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "type": "object",
                                "properties": {
                                    "name":{
                                        "type": "string"
                                    },
                                    "description":{
                                        "type": "string"
                                    },
                                    "summary":{
                                        "type": "string"
                                    },
                                    "dressinRoom":{
                                        "type": "string"
                                    },
                                    "parking":{
                                        "type":"boolean"
                                    },
                                    "accepted":{
                                        "type":"boolean",
                                        "default":false
                                    },
                                    "schedule":{
                                        "type": "array",
                                        "items":{
                                            "type":"object"
                                        }
                                    },
                                    "material":{
                                        "type": "array",
                                        "items":{
                                            "type": "object"
                                        }
                                    },
                                    "location":{
                                        "type": "object",
                                        "format": "Point(lat,long)"
                                    },
                                    "picture":{
                                        "type": "array",
                                        "items":{
                                            "type": "object"
                                        }
                                    },
                                    "fields":{
                                        "type": "array",
                                        "items":{
                                            "type": "object",
                                            "properties": {
                                                "name":{
                                                    "type": "string"
                                                },
                                                "pictures":{
                                                    "type": "object",
                                                    "format": "URL"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Compound created",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "integer",
                                    "example": 1
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/compound/location": {
            "get":{
                "tags": ["Compound"],
                "description": "Get all location",
                "parameters": [],
                "responses": {
                    "200":{
                        "description": "All the locations were adquired with success",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "array",
                                    "description":"array of compounds locations",
                                    "items":{
                                        "properties": {
                                            "compound":{
                                                "type": "object",
                                                "properties": {
                                                    "id":{
                                                        "type": "integer"
                                                    },
                                                    "location":{
                                                        "type": "object",
                                                        "format": "Point(lat,long)"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Resource not found"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/compound/{compoundId}":{
            "delete":{
                "tags":["Compound"],
                "description": "Delete a specified compound",
                "parameters": [
                    {
                        "name": "compoundId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the compound to delete",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "204":{
                        "description": "Compound deleted with success"
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This compound does not exist"
                                }
                            }
                        }
                    }
                }
            },
            "put":{
                "tags":["Compound"],
                "description": "Accept a compound",
                "parameters": [
                    {
                        "name": "compoundId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the compound to accept",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "204":{
                        "description": "Compound accepted with success"
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This compound does not exist"
                                }
                            }
                        }
                    }
                }
            },
            "get":{
                "tags": ["Compound"],
                "description": "Get compound information",
                "parameters": [
                    {
                        "name": "compoundId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the compound to get information for",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],                
                "responses": {
                    "200":{
                        "description": "All the information was adquired with success",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "object",
                                    "description":"compound information",
                                        "properties": {
                                            "compound":{
                                                "type": "object",
                                                "properties": {
                                                    "name":{
                                                        "type": "string"
                                                    },
                                                    "description":{
                                                        "type": "string"
                                                    },
                                                    "summary":{
                                                        "type": "string"
                                                    },
                                                    "dressinRoom":{
                                                        "type": "string"
                                                    },
                                                    "parking":{
                                                        "type":"boolean"
                                                    },
                                                    "schedule":{
                                                        "type": "array",
                                                        "items":{
                                                            "type":"object"
                                                        }
                                                    },
                                                    "material":{
                                                        "type": "object",
                                                        "properties":{
                                                            "id":{
                                                                "type":"integer"
                                                            },
                                                            "name":{
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "location":{
                                                        "type": "object",
                                                        "format": "Pair<Float,Float>"
                                                    },
                                                    "picture":{
                                                        "type": "array",
                                                        "items":{
                                                            "type": "object"
                                                        }
                                                    },
                                                    "fields":{
                                                        "type": "array",
                                                        "items":{
                                                            "type": "object",
                                                            "properties": {
                                                                "name":{
                                                                    "type": "string"
                                                                },
                                                                "pictures":{
                                                                    "type": "object",
                                                                    "format": "URL"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This compound does not exist"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{userId}/post/{postId}/comment":{
            "post":{
                "tags":["Comment"],
                "description": "Creates a new comment",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the user",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "postId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the post",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],                
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "type": "object",
                                "properties": {
                                    "comment":{
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Comment writen",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "integer",
                                    "example": 1
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This post does not exist"
                                }
                            }
                        }
                    }
                }
            },
            "get":{
                "tags": ["Comment"],
                "description": "Get comments for specific post",
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the compound to get information for",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],                
                "responses": {
                    "200":{
                        "description": "All the comments were adquired with success",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "array",
                                    "description":"comments",
                                    "items":{
                                        "properties": {
                                            "id":{
                                                "type": "integer"
                                            },
                                            "commentDate":{
                                                "type": "object"
                                            },
                                            "comment": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This post does not exist"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{userId}/post/{postId}/comment/{commentId}":{
            "delete":{
                "tags":["Comment"],
                "description": "Delete a specified compound",
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the post where the comment belongs",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "commentId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the comment to delete",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "204":{
                        "description": "Comment deleted with success"
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This comment does not exist"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{userId}/group/{groupId}/group":{
            "post":{
                "tags":["Group Message"],
                "description": "Send message to the group",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the user",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the group",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],                
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "type": "object",
                                "properties": {
                                    "message":{
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Message send",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "integer",
                                    "example": 1
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This group does not exist"
                                }
                            }
                        }
                    }
                }
            },
            "get":{
                "tags": ["Group Message"],
                "description": "Get the messages for specific group",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the group",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],                
                "responses": {
                    "200":{
                        "description": "All the messages were adquired with success",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "array",
                                    "description":"messages",
                                    "items":{
                                        "properties": {
                                            "id":{
                                                "type": "integer"
                                            },
                                            "messageDate":{
                                                "type": "object"
                                            },
                                            "message": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This group does not exist"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{userId}/message/{receiverId}":{
            "post":{
                "tags":["Private Message"],
                "description": "Send message to a certain account",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the sender",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "receiverId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the receiver",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],                
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "type": "object",
                                "properties": {
                                    "message":{
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Message send",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "integer",
                                    "example": 1
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This receiver does not exist"
                                }
                            }
                        }
                    }
                }
            },
            "get":{
                "tags": ["Private Message"],
                "description": "Get the messages for specific private conversation",
                "parameters": [
                    {
                        "name": "receiverId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the receiver to send the message",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],                
                "responses": {
                    "200":{
                        "description": "All the messages were adquired with success",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "array",
                                    "description":"messages",
                                    "items":{
                                        "properties": {
                                            "id":{
                                                "type": "integer"
                                            },
                                            "date":{
                                                "type": "object"
                                            },
                                            "message": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This receiver does not exist"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user":{
            "post":{
                "tags":["User"],
                "description": "Create an account",
                "parameters": [],                
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "type": "object",
                                "properties": {
                                    "firstName":{
                                        "type": "string"
                                    },
                                    "lastName":{
                                        "type": "string"
                                    },
                                    "city":{
                                        "type": "string"
                                    },
                                    "birthdate":{
                                        "type": "object"
                                    },
                                    "email":{
                                        "type": "string"
                                    },
                                    "available":{
                                        "type": "boolean"
                                    },
                                    "gender":{
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Account created",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "integer",
                                    "example": 1
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    }
                }
            },
            "get":{
                "tags": ["User"],
                "description": "Get users",
                "parameters": [],                
                "responses": {
                    "200":{
                        "description": "All the users were adquired with success",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "array",
                                    "description":"accounts",
                                    "items":{
                                        "properties": {
                                            "id":{
                                                "type": "integer"
                                            },
                                            "firstName":{
                                                "type": "string"
                                            },
                                            "lastName": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{userId}":{
            "delete":{
                "tags":["User"],
                "description": "Delete the account",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the account to delete",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "204":{
                        "description": "Account deleted with success"
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This account does not exist"
                                }
                            }
                        }
                    }
                }
            },
            "get":{
                "tags": ["User"],
                "description": "Get account information",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the account to get",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],                
                "responses": {
                    "200":{
                        "description": "Account adquired with success",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "object",
                                    "description":"Account",
                                    "properties": {
                                        "id":{
                                            "type": "integer"
                                        },
                                        "firstName":{
                                            "type": "string"
                                        },
                                        "lastName":{
                                            "type": "string"
                                        },
                                        "city":{
                                            "type": "string"
                                        },
                                        "birthdate":{
                                            "type": "object"
                                        },
                                        "email":{
                                            "type": "string"
                                        },
                                        "available":{
                                            "type": "boolean"
                                        },
                                        "gender":{
                                            "type": "string"
                                        }
                                }
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This account does not exist"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/compound/{compoundId}/review":{
            "post":{
                "tags":["Review"],
                "description": "Create a review for compound",
                "parameters": [{
                    "name": "compoundId",
                    "in": "path",
                    "required": true,
                    "description": "The id of the compound where the review was writen",
                    "schema":{
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                        }
                    }],                
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "type": "object",
                                "properties": {
                                    "rating":{
                                        "type": "number"
                                    },
                                    "description":{
                                        "type": "string"
                                    }   
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Review created",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "integer",
                                    "example": 1
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This compound/field does not exist"
                                }
                            }
                        }
                    }
                }
            },
            "get":{
                "tags": ["Review"],
                "description": "Get all compound/field reviews",
                "parameters": [
                    {
                        "name": "compoundId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the compound/field to get the reviews",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],                
                "responses": {
                    "200":{
                        "description": "Reviews adquired with success",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "array",
                                    "description":"reviews",
                                    "items":{
                                        "properties": {
                                            "id":{
                                                "type": "integer"
                                            },
                                            "description":{
                                                "type": "string"
                                            },
                                            "rating":{
                                                "type": "number"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This compound/field does not exist"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/compound/{compoundId}/review/{reviewId}":{
            "delete":{
                "tags":["Review"],
                "description": "Delete a review",
                "parameters": [
                    {
                        "name": "compoundId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the compound where the review was writen",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "reviewId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the review to delete",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "204":{
                        "description": "Review deleted with success"
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This compound/field does not exist"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/compound/{compoundId}/field/{fieldId}/review":{
            "post":{
                "tags":["Review"],
                "description": "Create a review for field",
                "parameters": [ 
                    {
                    "name": "compoundId",
                    "in": "path",
                    "required": true,
                    "description": "The id of the compound where the review was writen",
                    "schema":{
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                        }
                    },
                    {
                        "name": "fieldId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the field where the review was writen",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                            }
                        }
                ],                
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "type": "object",
                                "properties": {
                                    "rating":{
                                        "type": "number"
                                    },
                                    "description":{
                                        "type": "string"
                                    }   
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Review created",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "integer",
                                    "example": 1
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This compound/field does not exist"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sports":{
            "post":{
                "tags":["Sports"],
                "description": "Add a new sport",
                "parameters": [],                
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "type": "array",
                                "items":{
                                    "properties": {
                                        "name":{
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sport added",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "integer",
                                    "example": 1
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    }
                }
            },
            "get":{
                "tags": ["Sports"],
                "description": "Get all sports",
                "parameters": [],                
                "responses": {
                    "200":{
                        "description": "Sports adquired with success",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "array",
                                    "description":"all sports",
                                    "items":{
                                       "properties": {
                                            "id":{
                                                "type": "integer"
                                            },
                                            "name":{
                                                "type": "string"
                                            }
                                        } 
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Could't found any sport"
                                }
                            }
                        }
                    }
                }
            } 
        },
        "/user/{userId}/sports":{
            "post":{
                "tags":["Sports"],
                "description": "Add sport to user Information",
                "parameters": [ 
                    {
                    "name": "userId",
                    "in": "path",
                    "required": true,
                    "description": "The id of the account to associate the sport",
                    "schema":{
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                        }
                    }
                ],                
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "type": "array",
                                "items":{
                                    "properties": {
                                        "id":{
                                            "type": "number"
                                        } 
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sports added to user information",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "array",
                                    "items":{
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    }
                }
            },
            "get":{
                "tags": ["Sports"],
                "description": "Get all user sports",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the account to associate the sport",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],                
                "responses": {
                    "200":{
                        "description": "Sports adquired with success",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "array",
                                    "description":"all user sports",
                                    "items":{
                                       "properties": {
                                            "id":{
                                                "type": "integer"
                                            },
                                            "name":{
                                                "type": "string"
                                            }
                                        } 
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Could't found any sport"
                                }
                            }
                        }
                    }
                }
            } 
        },
        "/user/{userId}/sports/{sportsId}":{
            "delete":{
                "tags":["Sports"],
                "description": "Delete a sport from the user information",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the user account",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "sportId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the sport to delete",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "204":{
                        "description": "Sport deleted with success"
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This sport does not exist in the user account"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/compound/{compoundId}/field":{
            "post":{
                "tags":["Field"],
                "description": "Add a field to a compound",
                "parameters": [
                    {
                        "name": "compounId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the compound",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "type": "object",
                                "properties": {
                                    "name":{
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Field added",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "integer",
                                    "example": 1
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This compound does not exist"
                                }
                            }
                        }
                    }
                }
            },
            "get":{
                "tags": ["Field"],
                "description": "Get all compound fields",
                "parameters": [
                    {
                        "name": "compoundId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the compound",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],                
                "responses": {
                    "200":{
                        "description": "Compound fields adquired with success",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "array",
                                    "description":"all compound fields",
                                    "items":{
                                       "properties": {
                                            "id":{
                                                "type": "integer"
                                            },
                                            "name":{
                                                "type": "string"
                                            }
                                        } 
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This compound does not exist"
                                }
                            }
                        }
                    }
                }
            } 
        },
        "/compound/{compoundId}/field/{fieldId}":{
            "put":{
                "tags":["Field"],
                "description": "Accept the field",
                "parameters": [
                    {
                        "name": "compoundId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the compound",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "fieldId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the field to accept",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "204":{
                        "description": "Field accepted with success"
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This compound/field does not exist"
                                }
                            }
                        }
                    }
                }
            },
            "delete":{
                "tags":["Field"],
                "description": "Delete field from compound",
                "parameters": [
                    {
                        "name": "compoundId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the compound",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "fieldId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the field to delete",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "204":{
                        "description": "Field deleted with success"
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This compound/field does not exist"
                                }
                            }
                        }
                    }
                }
            },
            "get":{
                "tags": ["Field"],
                "description": "Get field information",
                "parameters": [
                    {
                        "name": "compoundId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the compound",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "fieldId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the field",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],                
                "responses": {
                    "200":{
                        "description": "Fields information adquired with success",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "object",
                                    "description":"all compound fields",
                                    "properties": {
                                        "id":{
                                            "type": "integer"
                                        },
                                        "name":{
                                            "type": "string"
                                        }
                                    } 
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This field does not exist"
                                }
                            }
                        }
                    }
                }
            } 
        },
        "/field":{
            "post":{
                "tags":["Field"],
                "description": "Add a field",
                "parameters": [],
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "type": "object",
                                "properties": {
                                    "name":{
                                        "type": "string"
                                    },
                                    "compound":{
                                        "type": "object",
                                        "properties": {
                                            "name":{
                                                "type": "string"
                                            },
                                            "parking":{
                                                "type":"boolean"
                                            },
                                            "location":{
                                                "type": "object",
                                                "example":"Point(lat,long)"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Field created",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "integer",
                                    "example": 1
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    }
                }
            } 
        },
        "/field/{fieldId}":{
            "delete":{
                "tags":["Field"],
                "description": "Delete the field",
                "parameters": [
                    {
                        "name": "fieldId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the field to delete",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "204":{
                        "description": "Field deleted with success"
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This field does not exist"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/group/{groupId}":{
            "delete":{
                "tags":["Group"],
                "description": "Delete the group",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the group",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "204":{
                        "description": "Group deleted with success"
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This group does not exist"
                                }
                            }
                        }
                    }
                }
            },
            "get":{
                "tags": ["Group"],
                "description": "Get group",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the group",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],                
                "responses": {
                    "200":{
                        "description": "Group information adquired with success",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "array",
                                    "description":"Group information",
                                    "items":{
                                        "properties": {
                                            "id":{
                                                "type": "integer"
                                            },
                                            "name":{
                                                "type": "string"
                                            }
                                        } 
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resorce not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This group does not exist"
                                }
                            }
                        }
                    }
                }
            } 
        },
        "/user/{userId}/group":{
            "post":{
                "tags":["Group"],
                "description": "Create a group",
                "parameters": [{
                    "name": "userId",
                    "in": "path",
                    "required": true,
                    "description": "The id of the group creator",
                    "schema":{
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    }
                }],
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "type": "object",
                                "properties": {
                                    "name":{
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Group created",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "integer",
                                    "example": 1
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    }
                }
            },
            "get":{
                "tags": ["Group"],
                "description": "Get user group",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the user",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],                
                "responses": {
                    "200":{
                        "description": "Groups adquired with success",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "array",
                                    "description":"all  user group",
                                    "items":{
                                        "properties": {
                                            "id":{
                                                "type": "integer"
                                            },
                                            "name":{
                                                "type": "string"
                                            }
                                        } 
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    }
                }
            } 
        },
        "/group/{groupId}/participant/{participantId}":{
            "post":{
                "tags":["Group"],
                "description": "Add a participant",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the group",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "participantId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the participant to add",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
            ],
                "responses": {
                    "200": {
                        "description": "Participant added to the group",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "integer",
                                    "example": 1
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This group does not exist"
                                }
                            }
                        }
                    }
                }
            },
            "delete":{
                "tags":["Group"],
                "description": "Remove the participant",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the group",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "participantId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the participant to remove",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "204":{
                        "description": "Participant removed with success"
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resource not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This group does not exist"
                                }
                            }
                        }
                    }
                }
            },
            "get":{
                "tags": ["Group"],
                "description": "Get group participants",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the group",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "participantId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the participant",
                        "schema":{
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                        }
                    }
                ],                
                "responses": {
                    "200":{
                        "description": "Group participants adquired with success",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "array",
                                    "description":"Group participant",
                                    "items":{
                                        "properties": {
                                            "id":{
                                                "type": "integer"
                                            },
                                            "participants":{
                                                "type": "array",
                                                "items":{
                                                    "properties": {
                                                        "firstName":{
                                                            "type": "string"
                                                        },
                                                        "lastName":{
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        } 
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Bad Request",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Bad Request"
                                }
                            }
                        }
                    },
                    "401":{
                        "description": "Unauthorized",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"Authentication required for this operation"
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "Resorce not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "string",
                                    "example":"This group does not exist"
                                }
                            }
                        }
                    }
                }
            } 
        }
    }
}
